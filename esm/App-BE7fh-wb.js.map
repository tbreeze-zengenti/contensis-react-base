{"version":3,"file":"App-BE7fh-wb.js","sources":["../src/redux/store/history.js","../src/redux/sagas/navigation.js","../src/util/schema.ts","../src/routing/util/expressions.ts","../src/routing/util/queries.ts","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/util/userHelper.js","../src/user/redux/sagas/resetPassword.js","../src/user/redux/sagas/index.ts","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.tsx"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","import { takeEvery, put, select } from 'redux-saga/effects';\nimport * as log from 'loglevel';\n\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/redux/types/navigation';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const { api, language, project, versionStatus, treeDepth } = action;\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const nodes = yield api.getRootNode(\n        {\n          depth: treeDepth || 0,\n          language,\n        },\n        versionStatus,\n        project\n      );\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    log.error(...['Error running ensureNodeTreeSaga:', ex]);\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n","import { IExpression } from 'contensis-core-api';\nimport { Op } from 'contensis-delivery-api';\nimport { Fields } from '~/util/schema';\n\nexport const fieldExpression = (\n  field: string,\n  value: string | string[],\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const defaultExpressions = (\n  versionStatus: 'published' | 'latest'\n): IExpression[] => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nconst equalToOrIn = (field: string, arr: string[], operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n","import { FieldLinkDepths, VersionStatus } from 'contensis-core-api';\nimport { Query } from 'contensis-delivery-api';\nimport { fieldExpression, defaultExpressions } from './expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id: string,\n  language = 'en-GB',\n  contentTypeId = '',\n  fields: string[] = [],\n  fieldLinkDepths: FieldLinkDepths,\n  versionStatus: VersionStatus = 'published'\n) => {\n  const query = new Query(\n    ...[\n      ...fieldExpression('sys.id', id),\n      ...fieldExpression('sys.language', language),\n      ...(contentTypeId\n        ? fieldExpression('sys.contentTypeId', contentTypeId)\n        : fieldExpression('sys.dataFormat', 'entry')),\n      ...defaultExpressions(versionStatus),\n    ]\n  );\n  query.fields = fields;\n  query.fieldLinkDepths = fieldLinkDepths;\n  return query;\n};\n","import to from 'await-to-js';\nimport * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\n\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectCurrentSiblings,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from './selectors';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\nimport { injectRedux as reduxInjector } from '~/redux/store/injectors';\n\nimport { LoginHelper } from '~/user';\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\nimport { routeEntryByFieldsQuery } from '../util/queries';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: 'CALL_HISTORY_METHOD',\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n      // get api instance from ssr context that is connected to the specific request in ssr\n      ssr: { api },\n    } = action;\n\n    // Inject redux { key, reducer, saga } provided by staticRoute\n    if (staticRoute && staticRoute.route.injectRedux)\n      yield call(reduxInjectorSaga, staticRoute.route.injectRedux);\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      children = [],\n      siblings = null;\n\n    let contentTypeMapping = {};\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n\n    const staticRouteLinkDepth = staticRoute?.route?.params?.linkDepth;\n    const staticRouteFields = staticRoute?.route?.params?.fields;\n    const staticRouteFieldLinkDepths =\n      staticRoute?.route?.params?.fieldLinkDepths;\n    const entryLinkDepth =\n      appsays && appsays.entryLinkDepth !== undefined\n        ? appsays.entryLinkDepth\n        : 2;\n    const entryFieldLinkDepths = appsays?.entryFieldLinkDepths;\n    const setContentTypeLimits =\n      (typeof staticRouteLinkDepth === 'undefined' || !staticRouteFields) &&\n      !!ContentTypeMappings.find(\n        ct => ct.fields || ct.linkDepth || ct.nodeOptions || ct.fieldLinkDepths\n      );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state, 'js');\n    const routeNode = selectCurrentNode(state, 'js');\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    // const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    if (\n      !isPreview &&\n      (appsays?.customRouting ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry &&\n          action.statePath === action.path &&\n          appsays?.refetchNode !== true))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (routeEntry && (!staticRoute || staticRoute?.route?.fetchNode)) {\n        pathNode = { ...routeNode, entry: null };\n        pathNode.entry = entry = routeEntry;\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          currentPath,\n          routeEntry,\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors),\n          yield select(selectCurrentSiblings)\n        );\n    } else {\n      // Handle preview routes\n      if (isPreview) {\n        let splitPath = currentPath.split('/');\n        let entryGuid = splitPath[2];\n        let language = defaultLang;\n        if (splitPath.length >= 3) {\n          //set lang key if available in the path, else use default lang\n          //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n          if (splitPath.length == 4) language = splitPath[3];\n          // According to product dev we cannot use Node API\n          // for previewing entries as it gives a response of []\n          // -- apparently it is not correct to request latest content\n          // with Node API\n\n          let previewEntry = yield api\n            .getClient(deliveryApiStatus, project)\n            .entries.get({\n              id: entryGuid,\n              language,\n              linkDepth: entryLinkDepth,\n            });\n          if (previewEntry) {\n            pathNode = { entry: previewEntry };\n            ({ entry } = pathNode || {});\n          }\n        }\n      } else {\n        // Handle all other routes\n        let nodeError = undefined;\n        [nodeError, pathNode] = yield to(\n          api.getNode(\n            {\n              depth: 0,\n              path: currentPath,\n              entryFields:\n                staticRouteFields ||\n                (setContentTypeLimits ? ['sys.contentTypeId', 'sys.id'] : '*'),\n              entryLinkDepth:\n                typeof staticRouteLinkDepth !== 'undefined'\n                  ? staticRouteLinkDepth\n                  : entryLinkDepth || 0,\n              entryFieldLinkDepths:\n                staticRouteFieldLinkDepths ||\n                (!setContentTypeLimits ? entryFieldLinkDepths : undefined),\n              language: defaultLang,\n              versionStatus: deliveryApiStatus,\n            },\n            project\n          )\n        );\n        if (nodeError) {\n          if ([401, 403].includes(nodeError.status)) {\n            // Capture specific auth errors with the delivery api\n            // and fire the user down the handleRequiresLoginSaga\n            // If auth was successful via a refreshToken we need to reload the page\n            // to run this getRouteSaga again with the security token cookie\n            const userLoggedIn = yield call(handleRequiresLoginSaga, {\n              ...action,\n              requireLogin: true,\n            });\n            if (userLoggedIn && nodeError.status === 401) {\n              // Reload the route so we can re-run the routing request now the\n              // authentication cookies are written\n              return yield call(setRouteSaga, { path: currentPath });\n            } else if (userLoggedIn && nodeError.status === 403) {\n              return yield call(setRouteSaga, {\n                path: LoginHelper.GetAccessDeniedRoute(currentPath),\n              });\n            } else {\n              return yield call(do500, nodeError);\n            }\n          } else throw nodeError;\n        } else ({ entry } = pathNode || {});\n\n        if (setContentTypeLimits && pathNode?.entry?.sys?.id) {\n          // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\n          // and current node's ordinates at a specified depth with specified fields\n          contentTypeMapping =\n            findContentTypeMapping(\n              ContentTypeMappings,\n              pathNode.entry.sys.contentTypeId\n            ) || {};\n          const { fieldLinkDepths, fields, linkDepth } = contentTypeMapping;\n          const query = routeEntryByFieldsQuery(\n            pathNode.entry.sys.id,\n            pathNode.entry.sys.language,\n            pathNode.entry.sys.contentTypeId,\n            fields,\n            fieldLinkDepths,\n            deliveryApiStatus\n          );\n          const payload = yield api.search(\n            query,\n            typeof linkDepth !== 'undefined' ? linkDepth : entryLinkDepth || 0,\n            project\n          );\n          if (payload?.items?.length > 0) {\n            pathNode.entry = entry = payload.items[0];\n          }\n        }\n      }\n\n      // make calls to fetch node ancestors, children,\n      // siblings or entire node tree\n      [ancestors, children, siblings] = yield call(\n        resolveCurrentNodeOrdinates,\n        {\n          api,\n          appsays,\n          contentTypeMapping,\n          language: defaultLang,\n          path: currentPath,\n          pathNode,\n          project,\n          versionStatus: deliveryApiStatus,\n        }\n      );\n\n      if (children) pathNode.children = children;\n    }\n\n    const resolvedContentTypeMapping =\n      findContentTypeMapping(\n        ContentTypeMappings,\n        pathNode?.entry?.sys?.contentTypeId\n      ) || {};\n\n    // Inject redux { key, reducer, saga } provided by ContentTypeMapping\n    if (resolvedContentTypeMapping.injectRedux)\n      yield call(reduxInjectorSaga, resolvedContentTypeMapping.injectRedux);\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') window.scrollTo(0, 0);\n    }\n\n    if (pathNode?.entry?.sys?.id) {\n      entry = pathNode.entry;\n\n      yield call(\n        setRouteEntry,\n        currentPath,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        staticRoute?.route?.fetchNode?.entryMapper ||\n          resolvedContentTypeMapping.entryMapper,\n        false,\n        appsays?.refetchNode\n      );\n    } else {\n      if (staticRoute)\n        yield call(\n          setRouteEntry,\n          currentPath,\n          null,\n          pathNode,\n          ancestors,\n          siblings\n        );\n      else yield call(do404);\n    }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do500, e);\n  }\n}\n\nfunction* resolveCurrentNodeOrdinates(action) {\n  const {\n    api,\n    appsays,\n    contentTypeMapping,\n    language,\n    path,\n    pathNode,\n    project,\n    versionStatus,\n  } = action;\n  const apiCall = [() => null, () => null, () => null, () => null];\n\n  // if appsays customNavigation: true, we will set doNavigation to false\n  // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n  // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n  const doNavigation =\n    !appsays ||\n    (appsays?.customNavigation === true\n      ? false\n      : appsays?.customNavigation || true);\n\n  const {\n    entryLinkDepth = 0,\n    fieldLinkDepths,\n    fields,\n    linkDepth,\n    nodeOptions = {},\n  } = contentTypeMapping;\n\n  if (pathNode && pathNode.id) {\n    if (doNavigation === true || doNavigation.ancestors) {\n      apiCall[0] = function* getAncestors() {\n        try {\n          return yield api.getAncestors(\n            {\n              id: pathNode.id,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching ancestors', ex);\n          return [];\n        }\n      };\n    }\n\n    const childrenDepth =\n      doNavigation === true || doNavigation.children === true\n        ? 1\n        : (doNavigation && doNavigation.children) || 0;\n\n    if (\n      (typeof nodeOptions?.children === 'undefined' && childrenDepth > 0) ||\n      nodeOptions.children\n    ) {\n      const childrenOptions =\n        !nodeOptions.children || typeof nodeOptions.children === 'boolean'\n          ? {}\n          : nodeOptions.children;\n      apiCall[1] = function* getChildren() {\n        try {\n          return yield api.getNode(\n            {\n              depth:\n                childrenOptions.depth !== undefined\n                  ? childrenOptions.depth\n                  : childrenDepth,\n              path,\n              entryFieldLinkDepths:\n                childrenOptions.fieldLinkDepths || fieldLinkDepths,\n              entryFields: childrenOptions.fields || fields || undefined,\n              entryLinkDepth:\n                typeof childrenOptions.linkDepth !== 'undefined'\n                  ? childrenOptions.linkDepth\n                  : typeof linkDepth !== 'undefined'\n                  ? linkDepth\n                  : entryLinkDepth,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching children', ex);\n          return [];\n        }\n      };\n    }\n\n    if (\n      (typeof nodeOptions?.siblings === 'undefined' && doNavigation.siblings) ||\n      nodeOptions.siblings\n    ) {\n      apiCall[2] = function* getSiblings() {\n        try {\n          return yield api.getSiblings(\n            {\n              id: pathNode.id,\n              entryFieldLinkDepths:\n                nodeOptions?.siblings?.fieldLinkDepths || fieldLinkDepths,\n              entryFields: nodeOptions?.siblings?.fields || fields || undefined,\n              entryLinkDepth:\n                typeof nodeOptions?.siblings?.linkDepth !== 'undefined'\n                  ? nodeOptions.siblings.linkDepth\n                  : typeof linkDepth !== 'undefined'\n                  ? linkDepth\n                  : entryLinkDepth,\n              includeInMenu: true,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching siblings', ex);\n          return [];\n        }\n      };\n    }\n  }\n\n  const isTreeLoaded = yield select(hasNavigationTree);\n  if (!isTreeLoaded && (doNavigation === true || doNavigation.tree))\n    apiCall[3] = function* getNodeTree() {\n      const treeDepth =\n        doNavigation === true ||\n        !doNavigation.tree ||\n        doNavigation.tree === true\n          ? 2\n          : doNavigation.tree;\n\n      if (typeof window !== 'undefined') {\n        return yield put({\n          type: GET_NODE_TREE,\n          ...action,\n          treeDepth,\n        });\n      } else {\n        return yield call(ensureNodeTreeSaga, { ...action, treeDepth });\n      }\n    };\n\n  const [loadAncestors, loadChildren, loadSiblings, loadTree] = apiCall;\n  const [ancestors, nodeWithChildren, siblings] = yield all([\n    loadAncestors(),\n    loadChildren(),\n    loadSiblings(),\n    loadTree(),\n  ]);\n  return [ancestors, nodeWithChildren?.children, siblings];\n}\n\nfunction* setRouteEntry(\n  currentPath,\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false,\n  remapEntry = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  // Update a window global to provide the preview toolbar\n  // an updated entry id in client-side navigation\n  if (typeof window !== 'undefined') window.ContensisEntryId = entrySys.id;\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry = !entryMapper\n    ? null\n    : currentEntryId === entrySys.id &&\n      currentEntryLang === entrySys.language &&\n      remapEntry === false\n    ? (yield select(selectMappedEntry, 'js')) || {}\n    : yield mapRouteEntry(entryMapper, {\n        ...node,\n        entry,\n        ancestors,\n        siblings,\n      });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      currentPath,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\n\nfunction* do404() {\n  yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\nfunction* clientReloadHitServer() {\n  const stateEntry = yield select(selectRouteEntry);\n\n  // If in client and there is a stateEntry.sys field reload the page,\n  // on the 2nd load stateEntry.sys should be null at this point,\n  // we do not wish to reload again and get stuck in an infinite reloading loop\n  if (typeof window !== 'undefined' && (stateEntry?.sys || null)) {\n    window.location.reload();\n  }\n}\n\nfunction* do500(error) {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n    isError: true,\n    error,\n    statusCode: error && error.status ? error.status : 500,\n  });\n}\n\nfunction* reduxInjectorSaga(injectorFn) {\n  if (typeof injectorFn === 'function') {\n    const { key, reducer, saga } = yield injectorFn();\n    reduxInjector({ key, reducer, saga });\n  }\n}\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { queryParams } from '~/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","const PAP_URL = 'https://pap.zengenti.com';\n\nconst USER_ENVS_URI = 'my-environments';\nconst USER_RESEND_VERIFICATION_URI = 'account/verify/resend';\nconst USER_REQUEST_PASSWORD_RESET_URI = 'account/reset';\nconst USER_RESET_PASSWORD_URI = 'account/reset/password';\n\nconst USER_ENVS_URL = `${PAP_URL}/${USER_ENVS_URI}`;\n\nconst BASE_OPTIONS = {\n  method: 'GET',\n  headers: { 'Content-Type': 'application/json' },\n};\n\nexport class UserHelper {\n  static async GetUsersEnvironments(securityToken) {\n    const options = {\n      ...BASE_OPTIONS,\n      headers: {\n        'x-security-token': securityToken,\n      },\n    };\n    return await UserHelper.get(USER_ENVS_URL, options);\n  }\n  static async ResendUserVerification(userEmail) {\n    const options = {\n      ...BASE_OPTIONS,\n    };\n    return await UserHelper.get(\n      `/${USER_RESEND_VERIFICATION_URI}?user=${userEmail}`,\n      options\n    );\n  }\n  static async RequestPasswordReset(userEmailObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(userEmailObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_REQUEST_PASSWORD_RESET_URI}`, options);\n  }\n  static async ResetPassword(resetPasswordObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(resetPasswordObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_RESET_PASSWORD_URI}`, options);\n  }\n\n  static async get(url, options = BASE_OPTIONS) {\n    try {\n      const responseBody = await api(url, options);\n      return responseBody;\n    } catch (err) {\n      return { error: { message: err.message } };\n    }\n  }\n}\n\nasync function api(url, options) {\n  return fetch(url, options)\n    .then(async response => {\n      return response.json().then(data => data);\n    })\n    .catch(error => {\n      throw error;\n    });\n}\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { to } from 'await-to-js';\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { UserHelper } from '~/user/util/userHelper';\nimport { selectClientCredentials } from '../selectors';\nimport {\n  REQUEST_USER_PASSWORD_RESET,\n  RESET_USER_PASSWORD,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from '../types';\n\nexport const resetPasswordSagas = [\n  takeEvery(REQUEST_USER_PASSWORD_RESET, requestPasswordResetSaga),\n  takeEvery(RESET_USER_PASSWORD, resetPasswordSaga),\n  takeEvery(CHANGE_USER_PASSWORD, changePasswordSaga),\n];\n\nfunction* requestPasswordResetSaga(action) {\n  const userEmailObject = action.userEmailObject;\n  yield put({\n    type: REQUEST_USER_PASSWORD_RESET_SENDING,\n  });\n  if (userEmailObject && userEmailObject.userEmail) {\n    try {\n      const passwordResetRequestResponse =\n        yield UserHelper.RequestPasswordReset(userEmailObject);\n\n      if (passwordResetRequestResponse) {\n        if (!passwordResetRequestResponse.error) {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_SUCCESS,\n          });\n        } else {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_ERROR,\n            error: passwordResetRequestResponse.error.message,\n          });\n        }\n      } else {\n        yield put({\n          type: REQUEST_USER_PASSWORD_RESET_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: REQUEST_USER_PASSWORD_RESET_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: REQUEST_USER_PASSWORD_RESET_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\nfunction* resetPasswordSaga(action) {\n  const resetPasswordObject = action.resetPasswordObject;\n\n  yield put({\n    type: RESET_USER_PASSWORD_SENDING,\n  });\n  if (resetPasswordObject.token && resetPasswordObject.password) {\n    try {\n      const resetPasswordResponse = yield UserHelper.ResetPassword(\n        resetPasswordObject\n      );\n\n      if (resetPasswordResponse) {\n        if (!resetPasswordResponse.error) {\n          yield put({\n            type: RESET_USER_PASSWORD_SUCCESS,\n          });\n        } else {\n          const error =\n            (resetPasswordResponse.error.data &&\n              resetPasswordResponse.error.data.length > 0 &&\n              resetPasswordResponse.error.data[0].message) ||\n            resetPasswordResponse.error.message;\n          yield put({\n            type: RESET_USER_PASSWORD_ERROR,\n            error,\n          });\n        }\n      } else {\n        yield put({\n          type: RESET_USER_PASSWORD_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: RESET_USER_PASSWORD_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: RESET_USER_PASSWORD_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\n// userId\n// existingPassword\n// newPassword\nfunction* changePasswordSaga(action) {\n  if (\n    !action ||\n    !action.userId ||\n    !action.currentPassword ||\n    !action.newPassword\n  ) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: 'Invalid action object sent to changePassword saga',\n    });\n    return;\n  }\n\n  try {\n    const changePasswordObject = {\n      userId: action.userId,\n      existing: action.currentPassword,\n      new: action.newPassword,\n    };\n\n    yield put({\n      type: CHANGE_USER_PASSWORD_SENDING,\n    });\n    const clientCredentials = yield select(selectClientCredentials, 'js');\n    const client = yield getManagementApiClient({ ...clientCredentials });\n\n    const [err, res] = yield to(\n      client.security.users.updatePassword(changePasswordObject)\n    );\n\n    if (err) {\n      const error =\n        (err?.data?.data?.length > 0 && err.data.data[0].message) ||\n        err?.data?.message;\n      yield put({\n        type: CHANGE_USER_PASSWORD_ERROR,\n        error,\n      });\n      return;\n    }\n\n    // // eslint-disable-next-line no-console\n    // console.log(changePasswordObject);\n    // // eslint-disable-next-line no-console\n    // console.log(userCredentialsObject);\n    yield put({\n      type: CHANGE_USER_PASSWORD_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: error && error.toString(),\n    });\n  }\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\nimport { resetPasswordSagas } from './resetPassword';\n\nexport const userSagas = [\n  ...loginSagas,\n  ...registerSagas,\n  ...resetPasswordSagas,\n];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from '~/routing/redux/sagas';\nimport { userSagas } from '~/user/redux/sagas';\n\nexport default function (featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { AppRootProps } from '~/models';\nimport { RouteLoader } from '../routing';\n\nconst AppRoot = (props: AppRootProps) => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","api","language","project","versionStatus","treeDepth","state","select","hasNavigationTree","nodes","getRootNode","depth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","log","error","toString","sys","contentTypeId","dataFormat","filename","id","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","value","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","length","in","routeEntryByFieldsQuery","fields","fieldLinkDepths","query","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","path","entry","_staticRoute$route","_staticRoute$route2","_staticRoute$route3","_appsays","_appsays2","_appsays3","_pathNode2","_pathNode3","withEvents","routes","ContentTypeMappings","staticRoute","ssr","route","injectRedux","call","reduxInjectorSaga","pathNode","ancestors","children","siblings","contentTypeMapping","appsays","requireLogin","onRouteLoad","staticRouteLinkDepth","params","linkDepth","staticRouteFields","staticRouteFieldLinkDepths","entryLinkDepth","undefined","entryFieldLinkDepths","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","deliveryApiStatus","selectVersionStatus","selectCurrentProject","isPreview","startsWith","defaultLang","customRouting","fetchNode","statePath","refetchNode","_staticRoute$route4","UPDATE_LOADING_STATE","isLoading","setRouteEntry","selectCurrentAncestors","selectCurrentSiblings","splitPath","split","entryGuid","previewEntry","getClient","entries","get","_pathNode","nodeError","to","getNode","entryFields","includes","status","userLoggedIn","handleRequiresLoginSaga","LoginHelper","GetAccessDeniedRoute","do500","_payload$items","findContentTypeMapping","search","items","resolveCurrentNodeOrdinates","resolvedContentTypeMapping","onRouteLoaded","preventScrollTop","scrollTo","_staticRoute$route5","_appsays4","entryMapper","do404","e","stack","apiCall","doNavigation","customNavigation","getAncestors","info","childrenDepth","childrenOptions","getChildren","getSiblings","_nodeOptions$siblings","_nodeOptions$siblings2","_nodeOptions$siblings3","includeInMenu","isTreeLoaded","tree","getNodeTree","loadAncestors","loadChildren","loadSiblings","loadTree","nodeWithChildren","all","node","notFound","remapEntry","entrySys","ContensisEntryId","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","mapRouteEntry","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","location","reload","isError","statusCode","injectorFn","key","reducer","saga","reduxInjector","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","request","response","fetch","headers","Accept","body","JSON","stringify","ok","mappedResponse","responseBody","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","PAP_URL","USER_ENVS_URI","USER_RESEND_VERIFICATION_URI","USER_REQUEST_PASSWORD_RESET_URI","USER_RESET_PASSWORD_URI","USER_ENVS_URL","BASE_OPTIONS","UserHelper","GetUsersEnvironments","securityToken","ResendUserVerification","userEmail","RequestPasswordReset","userEmailObject","ResetPassword","resetPasswordObject","url","err","then","data","catch","resetPasswordSagas","REQUEST_USER_PASSWORD_RESET","requestPasswordResetSaga","RESET_USER_PASSWORD","resetPasswordSaga","CHANGE_USER_PASSWORD","changePasswordSaga","REQUEST_USER_PASSWORD_RESET_SENDING","passwordResetRequestResponse","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","token","password","resetPasswordResponse","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD_ERROR","changePasswordObject","existing","new","CHANGE_USER_PASSWORD_SENDING","clientCredentials","selectClientCredentials","client","getManagementApiClient","res","security","users","updatePassword","_err$data","_err$data2","CHANGE_USER_PASSWORD_SUCCESS","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","p","AppRoot","props","React","createElement","RouteLoader"],"mappings":"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"}